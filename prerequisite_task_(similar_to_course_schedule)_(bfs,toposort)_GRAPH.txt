class Solution {
public:
	bool isPossible(int N, vector<pair<int,int>>& prerequisites) {
	    int count = 0;
	    vector<int> priority(N,0), adj[N];
        queue<int> q;

        for(auto a:prerequisites)
        {
            adj[a.second].push_back(a.first);
            priority[a.first]++;
        }
        
        for(int i=0;i<N;i++)
            if(priority[i] == 0)
                q.push(i);
        
        while(!q.empty())
        {
            count++;
            int node = q.front();
            q.pop();
            
            for(auto a:adj[node])
            {
                priority[a]--;
                if(priority[a] == 0) q.push(a);
            }
        }
        
        if(count == N) return true;
        return false;
	}
};